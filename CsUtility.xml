<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CsUtility</name>
    </assembly>
    <members>
        <member name="T:CsUtility.Comparer.DescendingComparer`1">
            <summary> 降順(逆順)に並べ替えるための比較子を提供します。 </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:CsUtility.Comparer.DescendingComparer`1.Default">
            <summary>
            汎用引数で指定された型の順序比較子の逆順並べ替えの既定値を返します。
            </summary>
        </member>
        <member name="M:CsUtility.Comparer.DescendingComparer`1.Create(System.Collections.Generic.IComparer{`0})">
            <summary> 指定した比較子を使用して、降順の比較子を作成します。 </summary>
            <param name="baseComparer"> 基準となる昇順の比較子 </param>
            <returns> 生成された降順比較子 </returns>
        </member>
        <member name="T:CsUtility.Enumerable.EnumerableUtilities">
            <summary>
            <see cref="T:System.Linq.Enumerable"/> および <see cref="T:System.Collections.IEnumerable"/> の Utility コードを定義しているクラス。
            </summary>
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},``0)">
            <summary>
            条件を満たす最初の要素を返します。存在しない場合は場合は与えられた初期値を返します。
            </summary>
            <typeparam name="TSource">要素の型</typeparam>
            <param name="source">探索する対象</param>
            <param name="predicate">各要素が条件を満たしているかどうかをテストする関数。</param>
            <param name="defaultValue">初期値</param>
            <exception cref="T:System.ArgumentNullException"> 
            <paramref name="source"/> または <paramref name="predicate"/> が null です。
            </exception>
            <returns> 条件を満たす最初の要素。条件を満たす要素が無い場合は <paramref name="defaultValue"/> </returns>
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},``0)">
            <summary>
            条件を満たす最後の要素を返します。存在しない場合は場合は与えられた初期値を返します。
            </summary>
            <typeparam name="TSource"> 要素の型</typeparam>
            <param name="source"> 探索する対象</param>
            <param name="predicate"> 各要素が条件を満たしているかどうかをテストする関数。</param>
            <param name="defaultValue"> 初期値。</param>
            <exception cref="T:System.ArgumentNullException"> 
            <paramref name="source"/> または <paramref name="predicate"/> が null です。
            </exception>
            <returns> 条件を満たす最後の要素。条件を満たす要素が無い場合は <paramref name="defaultValue"/> </returns>
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.Repeat``1(System.Func{``0},System.Int32)">
            <summary>
            繰り返される 1 つのジェネレータにより生成されるシーケンスを生成します。
            </summary>
            <typeparam name="TResult"> 結果のシーケンスで繰り返される値の型。</typeparam>
            <param name="generator"> シーケンスのジェネレータ。</param>
            <param name="count"> シーケンスで生成を繰り返す回数。</param>
            <returns> ジェネレータにより生成される要素を持つシーケンス </returns>
            <exception cref="T:System.ArgumentNullException"> <paramref name="generator"/> が null です。</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"> <paramref name="count"/> が 0 未満です。</exception>
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.ZipVicinity``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            前後の要素をひとまとめにした構造体のシーケンスを生成します。
            </summary>
            <typeparam name="TSource"> 要素の型。</typeparam>
            <param name="source"> ひとまとめにするシーケンス。</param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="source"/> が null です。</exception>
            <returns> 前後の要素をひとまとめにした構造体のシーケンス。 </returns>
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.ZipVicinity``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``1})">
            <summary>
            前後の要素を元に射影を行います。
            </summary>
            <typeparam name="TSource"> 要素の型。</typeparam>
            <typeparam name="TResult"> 返されるシーケンスの要素の型。</typeparam>
            <param name="source"> ひとまとめにするシーケンス。</param>
            <param name="resultSelector"> 各要素組に適用する変換関数。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="resultSelector"/> が null です。
            </exception>
            <returns> 射影されたシーケンス。 </returns>
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.Split``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            指定数毎に切り分けられたシーケンスを返します。
            </summary>
            <typeparam name="TSource"> シーケンスの要素の型。 </typeparam>
            <param name="source"> 切り分けれられるシーケンス。 </param>
            <param name="number"> 切り分けるシーケンスの数。 </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="source"/> が null です。 </exception>
            <exception cref="T:System.ArgumentOutOfRangeException"> <paramref name="number"/> が 1 未満です。 </exception>
            <returns> 切り分けられたシーケンス。</returns>
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.SplitIf``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,System.Boolean})">
            <summary>
            指定条件の要素の間で切り分けられたシーケンスを返します。
            </summary>
            <typeparam name="TSource"> シーケンスの要素の型。 </typeparam>
            <param name="source"> 切り分けれられるシーケンス。 </param>
            <param name="predicate"> 切り分ける条件を示す関数。 </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="predicate"/> が null です。
            </exception>
            <returns> 切り分けられたシーケンス。</returns>
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.AggregateSelect``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})">
            <summary>
            シーケンスにアキュムレータ関数を適用しその過程を要素とするシーケンスを返します。
            指定されたシード値が最初のアキュムレータ値として使用されます。
            </summary>
            <typeparam name="TSource"> 集計対象となるシーケンスの要素の型。 </typeparam>
            <typeparam name="TAccumulate"> アキュムレータ値の型 </typeparam>
            <param name="source"> 集計対象となるシーケンス </param>
            <param name="seed"> 最初のアキュムレータ値。 </param>
            <param name="func"> 各要素に対して呼び出すアキュムレータ関数。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="func"/> が null です。
            </exception>
            <returns>アキュムレータ関数を適用の過程を要素とするシーケンス</returns>
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.AggregateSelect``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})">
            <summary>
            シーケンスにアキュムレータ関数を適用しその過程を要素とするシーケンスを返します。
            </summary>
            <typeparam name="TSource"> 集計対象となるシーケンスの要素の型。 </typeparam>
            <param name="source"> 集計対象となるシーケンス </param>
            <param name="func"> 各要素に対して呼び出すアキュムレータ関数。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="func"/> が null です。
            </exception>
            <returns>アキュムレータ関数を適用の過程を要素とするシーケンス</returns>
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.AggregateSelect``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,System.ValueTuple{``1,``2}})">
            <summary>
            シーケンスにアキュムレータ関数を適用しその過程の結果を射影したシーケンスを返します。
            </summary>
            <typeparam name="TSource"> 集計対象となるシーケンスの要素の型。 </typeparam>
            <typeparam name="TAccumulate"> アキュムレータ値の型 </typeparam>
            <typeparam name="TResult"> 返り値のシーケンスの型。 </typeparam>
            <param name="source"> 集計対象となるシーケンス </param>
            <param name="seed"> 最初のアキュムレータ値。 </param>
            <param name="func"> 各要素に対して呼び出すアキュムレータと要素の射影を行う関数。</param>
            <returns>アキュムレータ関数を適用の過程より射影されたシーケンス。</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="func"/> が null です。
            </exception>
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.AggregateSelect``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``0,``2})">
            <summary>
            シーケンスにアキュムレータ関数を適用しその過程の結果を射影したシーケンスを返します。
            </summary>
            <typeparam name="TSource"> 集計対象となるシーケンスの要素の型。 </typeparam>
            <typeparam name="TAccumulate"> アキュムレータ値の型 </typeparam>
            <typeparam name="TResult"> 返り値のシーケンスの型。 </typeparam>
            <param name="source"> 集計対象となるシーケンス </param>
            <param name="func"> 各要素に対して呼び出すアキュムレータ関数。</param>
            <param name="seed"> 最初のアキュムレータ値。 </param>
            <param name="resultSelector"> アキュムレータ値と要素から結果を射影する関数。 </param>
            <returns>アキュムレータ関数を適用の過程から射影されたシーケンス。</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="func"/> または <paramref name="resultSelector"/> が null です。
            </exception>
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.AllEqual``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            型の規定の比較子を用いてシーケンスの全ての値が等しいかどうかを取得します。
            </summary>
            <typeparam name="TSource"> source の要素の型。</typeparam>
            <param name="source"> 精査する対象となるシーケンス。</param>
            <returns> 全ての要素が等しい場合 true。そうでない場合は false </returns>
            <exception cref="T:System.ArgumentNullException"> <paramref name="source"/> が null です。 </exception>s>
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.AllEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            指定の比較子を用いてシーケンスの全ての値が等しいかどうかを取得します。
            </summary>
            <typeparam name="TSource"> source の要素の型。</typeparam>
            <param name="source"> 精査する対象となるシーケンス。</param>
            <param name="comparer"> 値を比較する <see cref="T:System.Collections.Generic.IEqualityComparer`1"/>。</param>
            <returns> 全ての要素が等しい場合 true。そうでない場合は false </returns>
            <exception cref="T:System.ArgumentNullException"> <paramref name="source"/> が null です。 </exception>
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.AllEqual``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            指定のの比較子を用いて射影されたシーケンスの全ての値が等しいかどうかを取得します。
            </summary>
            <typeparam name="TSource"> source の要素の型。</typeparam>
            <typeparam name="TSelect"> 比較する要素の型。</typeparam>
            <param name="source"> 精査する対象となるシーケンス。</param>
            <param name="selector"> 射影する関数。 </param>
            <returns> 全ての要素が等しい場合 true。そうでない場合は false </returns>
            <exception cref="T:System.ArgumentNullException"> 
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception>
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.AllEqual``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
            <summary>
            型の規定の比較子を用いて射影されたシーケンスの全ての値が等しいかどうかを取得します。
            </summary>
            <typeparam name="TSource"> source の要素の型。</typeparam>
            <typeparam name="TSelect"> 比較する要素の型。</typeparam>
            <param name="source"> 精査する対象となるシーケンス。</param>
            <param name="comparer"> 値を比較する <see cref="T:System.Collections.Generic.IEqualityComparer`1"/>。</param>
            <param name="selector"> 射影する関数。 </param>
            <returns> 全ての要素が等しい場合 true。そうでない場合は false </returns>
            <exception cref="T:System.ArgumentNullException"> 
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception>
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.SelectMany``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{``0}})">
            <summary>
            2 次元のジャグシーケンスを平滑化します
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> の要素の型。 </typeparam>
            <param name="source"> 平坦化する 2 次元のジャグシーケンス。 </param>
            <returns> 平坦化されたシーケンス。 </returns>
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.SByte})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値を持つ要素を返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> の要素の型。</typeparam>
            <param name="source">最小値を確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値を持つ要素。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.SByte}})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値を持つ要素を返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> の要素の型。</typeparam>
            <param name="source">最小値を確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値を持つ要素。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Byte})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値を持つ要素を返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> の要素の型。</typeparam>
            <param name="source">最小値を確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値を持つ要素。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Byte}})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値を持つ要素を返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> の要素の型。</typeparam>
            <param name="source">最小値を確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値を持つ要素。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Char})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値を持つ要素を返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> の要素の型。</typeparam>
            <param name="source">最小値を確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値を持つ要素。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Char}})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値を持つ要素を返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> の要素の型。</typeparam>
            <param name="source">最小値を確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値を持つ要素。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int16})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値を持つ要素を返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> の要素の型。</typeparam>
            <param name="source">最小値を確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値を持つ要素。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int16}})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値を持つ要素を返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> の要素の型。</typeparam>
            <param name="source">最小値を確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値を持つ要素。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.UInt16})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値を持つ要素を返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> の要素の型。</typeparam>
            <param name="source">最小値を確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値を持つ要素。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.UInt16}})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値を持つ要素を返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> の要素の型。</typeparam>
            <param name="source">最小値を確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値を持つ要素。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値を持つ要素を返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> の要素の型。</typeparam>
            <param name="source">最小値を確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値を持つ要素。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値を持つ要素を返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> の要素の型。</typeparam>
            <param name="source">最小値を確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値を持つ要素。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.UInt32})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値を持つ要素を返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> の要素の型。</typeparam>
            <param name="source">最小値を確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値を持つ要素。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.UInt32}})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値を持つ要素を返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> の要素の型。</typeparam>
            <param name="source">最小値を確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値を持つ要素。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値を持つ要素を返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> の要素の型。</typeparam>
            <param name="source">最小値を確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値を持つ要素。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値を持つ要素を返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> の要素の型。</typeparam>
            <param name="source">最小値を確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値を持つ要素。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.UInt64})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値を持つ要素を返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> の要素の型。</typeparam>
            <param name="source">最小値を確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値を持つ要素。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.UInt64}})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値を持つ要素を返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> の要素の型。</typeparam>
            <param name="source">最小値を確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値を持つ要素。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値を持つ要素を返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> の要素の型。</typeparam>
            <param name="source">最小値を確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値を持つ要素。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値を持つ要素を返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> の要素の型。</typeparam>
            <param name="source">最小値を確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値を持つ要素。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値を持つ要素を返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> の要素の型。</typeparam>
            <param name="source">最小値を確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値を持つ要素。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値を持つ要素を返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> の要素の型。</typeparam>
            <param name="source">最小値を確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値を持つ要素。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値を持つ要素を返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> の要素の型。</typeparam>
            <param name="source">最小値を確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値を持つ要素。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値を持つ要素を返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> の要素の型。</typeparam>
            <param name="source">最小値を確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値を持つ要素。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MaxItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.SByte})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最大値を持つ要素を返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> の要素の型。</typeparam>
            <param name="source">最大値を確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最大値を持つ要素。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MaxItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.SByte}})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最大値を持つ要素を返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> の要素の型。</typeparam>
            <param name="source">最大値を確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最大値を持つ要素。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MaxItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Byte})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最大値を持つ要素を返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> の要素の型。</typeparam>
            <param name="source">最大値を確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最大値を持つ要素。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MaxItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Byte}})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最大値を持つ要素を返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> の要素の型。</typeparam>
            <param name="source">最大値を確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最大値を持つ要素。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MaxItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Char})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最大値を持つ要素を返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> の要素の型。</typeparam>
            <param name="source">最大値を確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最大値を持つ要素。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MaxItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Char}})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最大値を持つ要素を返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> の要素の型。</typeparam>
            <param name="source">最大値を確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最大値を持つ要素。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MaxItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int16})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最大値を持つ要素を返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> の要素の型。</typeparam>
            <param name="source">最大値を確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最大値を持つ要素。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MaxItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int16}})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最大値を持つ要素を返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> の要素の型。</typeparam>
            <param name="source">最大値を確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最大値を持つ要素。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MaxItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.UInt16})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最大値を持つ要素を返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> の要素の型。</typeparam>
            <param name="source">最大値を確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最大値を持つ要素。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MaxItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.UInt16}})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最大値を持つ要素を返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> の要素の型。</typeparam>
            <param name="source">最大値を確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最大値を持つ要素。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MaxItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最大値を持つ要素を返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> の要素の型。</typeparam>
            <param name="source">最大値を確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最大値を持つ要素。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MaxItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最大値を持つ要素を返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> の要素の型。</typeparam>
            <param name="source">最大値を確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最大値を持つ要素。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MaxItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.UInt32})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最大値を持つ要素を返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> の要素の型。</typeparam>
            <param name="source">最大値を確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最大値を持つ要素。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MaxItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.UInt32}})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最大値を持つ要素を返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> の要素の型。</typeparam>
            <param name="source">最大値を確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最大値を持つ要素。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MaxItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最大値を持つ要素を返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> の要素の型。</typeparam>
            <param name="source">最大値を確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最大値を持つ要素。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MaxItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最大値を持つ要素を返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> の要素の型。</typeparam>
            <param name="source">最大値を確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最大値を持つ要素。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MaxItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.UInt64})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最大値を持つ要素を返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> の要素の型。</typeparam>
            <param name="source">最大値を確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最大値を持つ要素。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MaxItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.UInt64}})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最大値を持つ要素を返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> の要素の型。</typeparam>
            <param name="source">最大値を確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最大値を持つ要素。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MaxItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最大値を持つ要素を返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> の要素の型。</typeparam>
            <param name="source">最大値を確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最大値を持つ要素。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MaxItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最大値を持つ要素を返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> の要素の型。</typeparam>
            <param name="source">最大値を確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最大値を持つ要素。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MaxItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最大値を持つ要素を返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> の要素の型。</typeparam>
            <param name="source">最大値を確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最大値を持つ要素。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MaxItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最大値を持つ要素を返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> の要素の型。</typeparam>
            <param name="source">最大値を確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最大値を持つ要素。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MaxItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最大値を持つ要素を返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> の要素の型。</typeparam>
            <param name="source">最大値を確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最大値を持つ要素。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MaxItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最大値を持つ要素を返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> の要素の型。</typeparam>
            <param name="source">最大値を確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最大値を持つ要素。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMax``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.SByte})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値と最大値のペアを返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> 要素の型。</typeparam>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値と最大値のペア。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMax``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.SByte}})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値と最大値のペアを返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> 要素の型。</typeparam>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値と最大値のペア。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMax``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Byte})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値と最大値のペアを返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> 要素の型。</typeparam>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値と最大値のペア。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMax``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Byte}})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値と最大値のペアを返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> 要素の型。</typeparam>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値と最大値のペア。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMax``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Char})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値と最大値のペアを返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> 要素の型。</typeparam>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値と最大値のペア。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMax``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Char}})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値と最大値のペアを返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> 要素の型。</typeparam>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値と最大値のペア。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMax``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int16})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値と最大値のペアを返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> 要素の型。</typeparam>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値と最大値のペア。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMax``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int16}})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値と最大値のペアを返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> 要素の型。</typeparam>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値と最大値のペア。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMax``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.UInt16})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値と最大値のペアを返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> 要素の型。</typeparam>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値と最大値のペア。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMax``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.UInt16}})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値と最大値のペアを返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> 要素の型。</typeparam>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値と最大値のペア。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMax``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値と最大値のペアを返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> 要素の型。</typeparam>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値と最大値のペア。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMax``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値と最大値のペアを返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> 要素の型。</typeparam>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値と最大値のペア。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMax``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.UInt32})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値と最大値のペアを返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> 要素の型。</typeparam>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値と最大値のペア。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMax``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.UInt32}})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値と最大値のペアを返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> 要素の型。</typeparam>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値と最大値のペア。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMax``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値と最大値のペアを返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> 要素の型。</typeparam>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値と最大値のペア。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMax``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値と最大値のペアを返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> 要素の型。</typeparam>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値と最大値のペア。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMax``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.UInt64})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値と最大値のペアを返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> 要素の型。</typeparam>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値と最大値のペア。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMax``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.UInt64}})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値と最大値のペアを返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> 要素の型。</typeparam>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値と最大値のペア。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMax``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値と最大値のペアを返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> 要素の型。</typeparam>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値と最大値のペア。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMax``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値と最大値のペアを返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> 要素の型。</typeparam>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値と最大値のペア。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMax``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値と最大値のペアを返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> 要素の型。</typeparam>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値と最大値のペア。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMax``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値と最大値のペアを返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> 要素の型。</typeparam>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値と最大値のペア。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMax``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値と最大値のペアを返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> 要素の型。</typeparam>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値と最大値のペア。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMax``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値と最大値のペアを返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> 要素の型。</typeparam>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値と最大値のペア。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMax(System.Collections.Generic.IEnumerable{System.SByte})">
            <summary>
            シーケンスの各要素の最小値と最大値のペアを返します。
            </summary>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <returns> 最小値と最大値のペア。 </returns>
            <exception cref="T:System.ArgumentNullException"> <paramref name="source"/> が null です。</exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMax(System.Collections.Generic.IEnumerable{System.Nullable{System.SByte}})">
            <summary>
            シーケンスの各要素の最小値と最大値のペアを返します。
            </summary>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <returns> 最小値と最大値のペア。 </returns>
            <exception cref="T:System.ArgumentNullException"> <paramref name="source"/> が null です。</exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMax(System.Collections.Generic.IEnumerable{System.Byte})">
            <summary>
            シーケンスの各要素の最小値と最大値のペアを返します。
            </summary>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <returns> 最小値と最大値のペア。 </returns>
            <exception cref="T:System.ArgumentNullException"> <paramref name="source"/> が null です。</exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMax(System.Collections.Generic.IEnumerable{System.Nullable{System.Byte}})">
            <summary>
            シーケンスの各要素の最小値と最大値のペアを返します。
            </summary>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <returns> 最小値と最大値のペア。 </returns>
            <exception cref="T:System.ArgumentNullException"> <paramref name="source"/> が null です。</exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMax(System.Collections.Generic.IEnumerable{System.Char})">
            <summary>
            シーケンスの各要素の最小値と最大値のペアを返します。
            </summary>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <returns> 最小値と最大値のペア。 </returns>
            <exception cref="T:System.ArgumentNullException"> <paramref name="source"/> が null です。</exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMax(System.Collections.Generic.IEnumerable{System.Nullable{System.Char}})">
            <summary>
            シーケンスの各要素の最小値と最大値のペアを返します。
            </summary>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <returns> 最小値と最大値のペア。 </returns>
            <exception cref="T:System.ArgumentNullException"> <paramref name="source"/> が null です。</exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMax(System.Collections.Generic.IEnumerable{System.Int16})">
            <summary>
            シーケンスの各要素の最小値と最大値のペアを返します。
            </summary>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <returns> 最小値と最大値のペア。 </returns>
            <exception cref="T:System.ArgumentNullException"> <paramref name="source"/> が null です。</exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMax(System.Collections.Generic.IEnumerable{System.Nullable{System.Int16}})">
            <summary>
            シーケンスの各要素の最小値と最大値のペアを返します。
            </summary>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <returns> 最小値と最大値のペア。 </returns>
            <exception cref="T:System.ArgumentNullException"> <paramref name="source"/> が null です。</exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMax(System.Collections.Generic.IEnumerable{System.UInt16})">
            <summary>
            シーケンスの各要素の最小値と最大値のペアを返します。
            </summary>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <returns> 最小値と最大値のペア。 </returns>
            <exception cref="T:System.ArgumentNullException"> <paramref name="source"/> が null です。</exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMax(System.Collections.Generic.IEnumerable{System.Nullable{System.UInt16}})">
            <summary>
            シーケンスの各要素の最小値と最大値のペアを返します。
            </summary>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <returns> 最小値と最大値のペア。 </returns>
            <exception cref="T:System.ArgumentNullException"> <paramref name="source"/> が null です。</exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMax(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            シーケンスの各要素の最小値と最大値のペアを返します。
            </summary>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <returns> 最小値と最大値のペア。 </returns>
            <exception cref="T:System.ArgumentNullException"> <paramref name="source"/> が null です。</exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMax(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
            <summary>
            シーケンスの各要素の最小値と最大値のペアを返します。
            </summary>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <returns> 最小値と最大値のペア。 </returns>
            <exception cref="T:System.ArgumentNullException"> <paramref name="source"/> が null です。</exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMax(System.Collections.Generic.IEnumerable{System.UInt32})">
            <summary>
            シーケンスの各要素の最小値と最大値のペアを返します。
            </summary>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <returns> 最小値と最大値のペア。 </returns>
            <exception cref="T:System.ArgumentNullException"> <paramref name="source"/> が null です。</exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMax(System.Collections.Generic.IEnumerable{System.Nullable{System.UInt32}})">
            <summary>
            シーケンスの各要素の最小値と最大値のペアを返します。
            </summary>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <returns> 最小値と最大値のペア。 </returns>
            <exception cref="T:System.ArgumentNullException"> <paramref name="source"/> が null です。</exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMax(System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            シーケンスの各要素の最小値と最大値のペアを返します。
            </summary>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <returns> 最小値と最大値のペア。 </returns>
            <exception cref="T:System.ArgumentNullException"> <paramref name="source"/> が null です。</exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMax(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})">
            <summary>
            シーケンスの各要素の最小値と最大値のペアを返します。
            </summary>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <returns> 最小値と最大値のペア。 </returns>
            <exception cref="T:System.ArgumentNullException"> <paramref name="source"/> が null です。</exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMax(System.Collections.Generic.IEnumerable{System.UInt64})">
            <summary>
            シーケンスの各要素の最小値と最大値のペアを返します。
            </summary>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <returns> 最小値と最大値のペア。 </returns>
            <exception cref="T:System.ArgumentNullException"> <paramref name="source"/> が null です。</exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMax(System.Collections.Generic.IEnumerable{System.Nullable{System.UInt64}})">
            <summary>
            シーケンスの各要素の最小値と最大値のペアを返します。
            </summary>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <returns> 最小値と最大値のペア。 </returns>
            <exception cref="T:System.ArgumentNullException"> <paramref name="source"/> が null です。</exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMax(System.Collections.Generic.IEnumerable{System.Single})">
            <summary>
            シーケンスの各要素の最小値と最大値のペアを返します。
            </summary>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <returns> 最小値と最大値のペア。 </returns>
            <exception cref="T:System.ArgumentNullException"> <paramref name="source"/> が null です。</exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMax(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})">
            <summary>
            シーケンスの各要素の最小値と最大値のペアを返します。
            </summary>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <returns> 最小値と最大値のペア。 </returns>
            <exception cref="T:System.ArgumentNullException"> <paramref name="source"/> が null です。</exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMax(System.Collections.Generic.IEnumerable{System.Double})">
            <summary>
            シーケンスの各要素の最小値と最大値のペアを返します。
            </summary>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <returns> 最小値と最大値のペア。 </returns>
            <exception cref="T:System.ArgumentNullException"> <paramref name="source"/> が null です。</exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMax(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})">
            <summary>
            シーケンスの各要素の最小値と最大値のペアを返します。
            </summary>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <returns> 最小値と最大値のペア。 </returns>
            <exception cref="T:System.ArgumentNullException"> <paramref name="source"/> が null です。</exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMax(System.Collections.Generic.IEnumerable{System.Decimal})">
            <summary>
            シーケンスの各要素の最小値と最大値のペアを返します。
            </summary>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <returns> 最小値と最大値のペア。 </returns>
            <exception cref="T:System.ArgumentNullException"> <paramref name="source"/> が null です。</exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMax(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})">
            <summary>
            シーケンスの各要素の最小値と最大値のペアを返します。
            </summary>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <returns> 最小値と最大値のペア。 </returns>
            <exception cref="T:System.ArgumentNullException"> <paramref name="source"/> が null です。</exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMaxItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.SByte})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値を持つ要素と最大値を持つ要素のペアを返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> 要素の型。</typeparam>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値を持つ要素と最大値を持つ要素のペア。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMaxItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.SByte}})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値を持つ要素と最大値を持つ要素のペアを返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> 要素の型。</typeparam>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値を持つ要素と最大値を持つ要素のペア。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMaxItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Byte})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値を持つ要素と最大値を持つ要素のペアを返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> 要素の型。</typeparam>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値を持つ要素と最大値を持つ要素のペア。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMaxItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Byte}})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値を持つ要素と最大値を持つ要素のペアを返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> 要素の型。</typeparam>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値を持つ要素と最大値を持つ要素のペア。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMaxItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Char})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値を持つ要素と最大値を持つ要素のペアを返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> 要素の型。</typeparam>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値を持つ要素と最大値を持つ要素のペア。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMaxItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Char}})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値を持つ要素と最大値を持つ要素のペアを返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> 要素の型。</typeparam>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値を持つ要素と最大値を持つ要素のペア。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMaxItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int16})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値を持つ要素と最大値を持つ要素のペアを返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> 要素の型。</typeparam>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値を持つ要素と最大値を持つ要素のペア。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMaxItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int16}})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値を持つ要素と最大値を持つ要素のペアを返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> 要素の型。</typeparam>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値を持つ要素と最大値を持つ要素のペア。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMaxItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.UInt16})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値を持つ要素と最大値を持つ要素のペアを返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> 要素の型。</typeparam>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値を持つ要素と最大値を持つ要素のペア。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMaxItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.UInt16}})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値を持つ要素と最大値を持つ要素のペアを返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> 要素の型。</typeparam>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値を持つ要素と最大値を持つ要素のペア。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMaxItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値を持つ要素と最大値を持つ要素のペアを返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> 要素の型。</typeparam>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値を持つ要素と最大値を持つ要素のペア。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMaxItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値を持つ要素と最大値を持つ要素のペアを返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> 要素の型。</typeparam>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値を持つ要素と最大値を持つ要素のペア。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMaxItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.UInt32})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値を持つ要素と最大値を持つ要素のペアを返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> 要素の型。</typeparam>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値を持つ要素と最大値を持つ要素のペア。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMaxItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.UInt32}})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値を持つ要素と最大値を持つ要素のペアを返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> 要素の型。</typeparam>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値を持つ要素と最大値を持つ要素のペア。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMaxItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値を持つ要素と最大値を持つ要素のペアを返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> 要素の型。</typeparam>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値を持つ要素と最大値を持つ要素のペア。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMaxItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値を持つ要素と最大値を持つ要素のペアを返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> 要素の型。</typeparam>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値を持つ要素と最大値を持つ要素のペア。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMaxItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.UInt64})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値を持つ要素と最大値を持つ要素のペアを返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> 要素の型。</typeparam>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値を持つ要素と最大値を持つ要素のペア。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMaxItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.UInt64}})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値を持つ要素と最大値を持つ要素のペアを返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> 要素の型。</typeparam>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値を持つ要素と最大値を持つ要素のペア。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMaxItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値を持つ要素と最大値を持つ要素のペアを返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> 要素の型。</typeparam>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値を持つ要素と最大値を持つ要素のペア。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMaxItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値を持つ要素と最大値を持つ要素のペアを返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> 要素の型。</typeparam>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値を持つ要素と最大値を持つ要素のペア。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMaxItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値を持つ要素と最大値を持つ要素のペアを返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> 要素の型。</typeparam>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値を持つ要素と最大値を持つ要素のペア。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMaxItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値を持つ要素と最大値を持つ要素のペアを返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> 要素の型。</typeparam>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値を持つ要素と最大値を持つ要素のペア。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMaxItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値を持つ要素と最大値を持つ要素のペアを返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> 要素の型。</typeparam>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値を持つ要素と最大値を持つ要素のペア。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMaxItem``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})">
            <summary>
            シーケンスの各要素に対して変換関数を呼び出し、最小値を持つ要素と最大値を持つ要素のペアを返します。
            </summary>
            <typeparam name="TSource"> <paramref name="source"/> 要素の型。</typeparam>
            <param name="source"> 確認する対象となるシーケンス。</param>
            <param name="selector"> 各要素に適用する変換関数。</param>
            <returns> 最小値を持つ要素と最大値を持つ要素のペア。 </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> または <paramref name="selector"/> が null です。
            </exception> 
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.Zip``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Collections.Generic.IEnumerable{``2},System.Func{``0,``1,``2,``3})">
            <summary>
            指定された関数を結果のシーケンスを生成する 3 個のシーケンスに対応する要素に適用します。
            </summary>
            <typeparam name="TFirst"> 1 番目の入力シーケンスの要素の型。 </typeparam>
            <typeparam name="TSecond"> 2 番目の入力シーケンスの要素の型。 </typeparam>
            <typeparam name="TThird"> 3 番目の入力シーケンスの要素の型。 </typeparam>
            <typeparam name="TResult"> 結果のシーケンスの要素の型。 </typeparam>
            <param name="first"> マージする 1 番目のシーケンス。</param>
            <param name="second"> マージする 2 番目のシーケンス。</param>
            <param name="third"> マージする 3 番目のシーケンス。</param>
            <param name="resultSelector"> 3 個のシーケンスから要素を結合する方法を指定する関数。 </param>
            <returns> 3 個の入力シーケンスの結合の要素を格納します </returns>
            <exception cref="T:System.ArgumentNullException"> 入力シーケンスまたは  が null です。 </exception>
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.Zip``5(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Collections.Generic.IEnumerable{``2},System.Collections.Generic.IEnumerable{``3},System.Func{``0,``1,``2,``3,``4})">
            <summary>
            指定された関数を結果のシーケンスを生成する 4 個のシーケンスに対応する要素に適用します。
            </summary>
            <typeparam name="TFirst"> 1 番目の入力シーケンスの要素の型。 </typeparam>
            <typeparam name="TSecond"> 2 番目の入力シーケンスの要素の型。 </typeparam>
            <typeparam name="TThird"> 3 番目の入力シーケンスの要素の型。 </typeparam>
            <typeparam name="TFourth"> 4 番目の入力シーケンスの要素の型。 </typeparam>
            <typeparam name="TResult"> 結果のシーケンスの要素の型。 </typeparam>
            <param name="first"> マージする 1 番目のシーケンス。</param>
            <param name="second"> マージする 2 番目のシーケンス。</param>
            <param name="third"> マージする 3 番目のシーケンス。</param>
            <param name="fourth"> マージする 4 番目のシーケンス。</param>
            <param name="resultSelector"> 4 個のシーケンスから要素を結合する方法を指定する関数。 </param>
            <returns> 4 個の入力シーケンスの結合の要素を格納します </returns>
            <exception cref="T:System.ArgumentNullException"> 入力シーケンスまたは  が null です。 </exception>
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.Zip``6(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Collections.Generic.IEnumerable{``2},System.Collections.Generic.IEnumerable{``3},System.Collections.Generic.IEnumerable{``4},System.Func{``0,``1,``2,``3,``4,``5})">
            <summary>
            指定された関数を結果のシーケンスを生成する 5 個のシーケンスに対応する要素に適用します。
            </summary>
            <typeparam name="TFirst"> 1 番目の入力シーケンスの要素の型。 </typeparam>
            <typeparam name="TSecond"> 2 番目の入力シーケンスの要素の型。 </typeparam>
            <typeparam name="TThird"> 3 番目の入力シーケンスの要素の型。 </typeparam>
            <typeparam name="TFourth"> 4 番目の入力シーケンスの要素の型。 </typeparam>
            <typeparam name="TFifth"> 5 番目の入力シーケンスの要素の型。 </typeparam>
            <typeparam name="TResult"> 結果のシーケンスの要素の型。 </typeparam>
            <param name="first"> マージする 1 番目のシーケンス。</param>
            <param name="second"> マージする 2 番目のシーケンス。</param>
            <param name="third"> マージする 3 番目のシーケンス。</param>
            <param name="fourth"> マージする 4 番目のシーケンス。</param>
            <param name="fifth"> マージする 5 番目のシーケンス。</param>
            <param name="resultSelector"> 5 個のシーケンスから要素を結合する方法を指定する関数。 </param>
            <returns> 5 個の入力シーケンスの結合の要素を格納します </returns>
            <exception cref="T:System.ArgumentNullException"> 入力シーケンスまたは  が null です。 </exception>
        </member>
        <member name="T:CsUtility.Enumerable.EnumerableUtilities.MinMaxPair`1">
            <summary> 最小値と最大値の組を持つ構造体。 </summary>
            <typeparam name="T"> 要素の型。 </typeparam>
        </member>
        <member name="P:CsUtility.Enumerable.EnumerableUtilities.MinMaxPair`1.Min">
            <summary> 最大値。</summary>
        </member>
        <member name="P:CsUtility.Enumerable.EnumerableUtilities.MinMaxPair`1.Max">
            <summary> 最小値。</summary>
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.MinMaxPair`1.Deconstruct(`0@,`0@)">
            <summary> 最大値/最小値の要素の分解を行います。 </summary>
            <param name="min"> 最小値の要素。</param>
            <param name="max"> 最大値の要素。</param>
        </member>
        <member name="T:CsUtility.Enumerable.EnumerableUtilities.PrevNextPair`1">
            <summary>
            前後をひとまとめにした構造体
            </summary>
            <typeparam name="T"> 要素の型。 </typeparam>
        </member>
        <member name="P:CsUtility.Enumerable.EnumerableUtilities.PrevNextPair`1.Prev">
            <summary> 前方の要素。</summary>
        </member>
        <member name="P:CsUtility.Enumerable.EnumerableUtilities.PrevNextPair`1.Next">
            <summary> 後方の要素。</summary>
        </member>
        <member name="M:CsUtility.Enumerable.EnumerableUtilities.PrevNextPair`1.Deconstruct(`0@,`0@)">
            <summary> 前後の要素の分解を行います </summary>
            <param name="prev"> 前方の要素。</param>
            <param name="next"> 後方の要素。</param>
        </member>
        <member name="T:CsUtility.Generic.ReadSafeDictionary">
            <summary>
            <seealso cref="T:CsUtility.Generic.ReadSafeDictionary`2"/> の操作をサポートするクラス
            </summary>
        </member>
        <member name="M:CsUtility.Generic.ReadSafeDictionary.GetValueOrDefault``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1,System.Boolean)">
            <summary>
            指定されたキーに関連付けられている値を取得します。存在しない場合は指定した初期値を返します。
            </summary>
            <param name="dictionary"> 読取を試みるディクショナリ。 </param>
            <param name="key">取得または値のキー。</param>
            <param name="defaultValue"> 指定したキーが見つからなかった場合に返す値。 </param>
            <param name="isSetValue"> 指定したキーが見つからなかった場合に値をセットするかを指定します。 </param>
            <returns>
            指定されたキーに関連付けられている値。 
            指定したキーが見つからなかった場合初期値を返します
            </returns>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key"/> または <paramref name="dictionary"/> は null です。</exception>
        </member>
        <member name="M:CsUtility.Generic.ReadSafeDictionary.ToReadSafeDictionary``2(System.Collections.Generic.IDictionary{``0,``1})">
            <summary>
            指定した <see cref="T:System.Collections.Generic.IDictionary`2"/> から要素をコピーして格納し、
            <typeparamref name="TKey"/> の規定値をディクショナリ内の値の規定値とし、
            キーの型の既定の等値比較子を使用する、
            <see cref="T:CsUtility.Generic.ReadSafeDictionary`2"/> クラスの新しいインスタンスを生成します。
            </summary>
            <param name="dictionary"> 要素が新しい <see cref="T:CsUtility.Generic.ReadSafeDictionary`2"/> にコピーされる  <see cref="T:System.Collections.Generic.IDictionary`2"/>。</param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="dictionary"/> は null です。</exception>
        </member>
        <member name="M:CsUtility.Generic.ReadSafeDictionary.ToReadSafeDictionary``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            指定した <see cref="T:System.Collections.Generic.IDictionary`2"/> から要素をコピーして格納し、
            <typeparamref name="TKey"/> の規定値をディクショナリ内の値の規定値とし、
            指定した <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> を使用する、
            <see cref="T:CsUtility.Generic.ReadSafeDictionary`2"/> クラスの新しいインスタンスを生成します。
            </summary>
            <param name="dictionary"> 要素が新しい <see cref="T:CsUtility.Generic.ReadSafeDictionary`2"/> にコピーされる  <see cref="T:System.Collections.Generic.IDictionary`2"/>。</param>
            <param name="comparer">
            キーの比較時に使用する <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> 実装。
            キーの型の既定の <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> を使用する場合は null。
            </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="dictionary"/> は null です。</exception>
            <exception cref="T:System.ArgumentException"> <paramref name="dictionary"/> には 1 つまたは複数の重複するキーが含まれます。</exception>
        </member>
        <member name="M:CsUtility.Generic.ReadSafeDictionary.ToReadSafeDictionary``2(System.Collections.Generic.IDictionary{``0,``1},``1)">
            <summary>
            指定した <see cref="T:System.Collections.Generic.IDictionary`2"/> から要素をコピーして格納し、
            指定した値をディクショナリ内の値の規定値とし、
            キーの型の既定の等値比較子を使用する、
            <see cref="T:CsUtility.Generic.ReadSafeDictionary`2"/> クラスの新しいインスタンスを生成します。
            </summary>
            <param name="dictionary"> 要素が新しい <see cref="T:CsUtility.Generic.ReadSafeDictionary`2"/> にコピーされる  <see cref="T:System.Collections.Generic.IDictionary`2"/>。</param>
            <param name="defaultValue"> ディクショナリ内の値の規定値。 </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="dictionary"/> は null です。</exception>
            <exception cref="T:System.ArgumentException"> <paramref name="dictionary"/> には 1 つまたは複数の重複するキーが含まれます。</exception>
        </member>
        <member name="M:CsUtility.Generic.ReadSafeDictionary.ToReadSafeDictionary``2(System.Collections.Generic.IDictionary{``0,``1},``1,System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            指定した <see cref="T:System.Collections.Generic.IDictionary`2"/> から要素をコピーして格納し、
            指定した値をディクショナリ内の値の規定値とし、
            指定した <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> を使用する、
            <see cref="T:CsUtility.Generic.ReadSafeDictionary`2"/> クラスの新しいインスタンスを生成します。
            </summary>
            <param name="dictionary"> 要素が新しい <see cref="T:CsUtility.Generic.ReadSafeDictionary`2"/> にコピーされる  <see cref="T:System.Collections.Generic.IDictionary`2"/>。</param>
            <param name="defaultValue"> ディクショナリ内の値の規定値。 </param>
            <param name="comparer">
            キーの比較時に使用する <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> 実装。
            キーの型の既定の <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> を使用する場合は null。
            </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="dictionary"/> は null です。</exception>
            <exception cref="T:System.ArgumentException"> <paramref name="dictionary"/> には 1 つまたは複数の重複するキーが含まれます。</exception>
        </member>
        <member name="T:CsUtility.Generic.ReadSafeDictionary`2">
            <summary>
            読み取り時にインザクサで指定してもエラーを吐かない <see cref="T:System.Collections.Generic.Dictionary`2"/> の派生クラス
            </summary>
            <typeparam name="TKey"> ディクショナリ内のキーの型。 </typeparam>
            <typeparam name="TValue"> ディクショナリ内の値の型。 </typeparam>
        </member>
        <member name="M:CsUtility.Generic.ReadSafeDictionary`2.#ctor">
            <summary>
            空で、
            <typeparamref name="TKey"/> の規定値をディクショナリ内の値の規定値とし、
            既定の初期量を備え、
            キーの型の既定の等値比較子を使用する、
            <see cref="T:CsUtility.Generic.ReadSafeDictionary`2"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:CsUtility.Generic.ReadSafeDictionary`2.#ctor(System.Int32)">
            <summary>
            空で、
            <typeparamref name="TKey"/> の規定値をディクショナリ内の値の規定値とする、
            指定した初期量を備え、
            キーの型の既定の等値比較子を使用する、 
            <see cref="T:CsUtility.Generic.ReadSafeDictionary`2"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="capacity">  が格納できる要素数の初期値。</param>
            <exception cref="T:System.ArgumentOutOfRangeException"> <paramref name="capacity"/> が 0 未満です。</exception>
        </member>
        <member name="M:CsUtility.Generic.ReadSafeDictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            空で、
            <typeparamref name="TKey"/> の規定値をディクショナリ内の値の規定値とし、
            既定の初期量を備え、
            指定した <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> を使用する、
            <see cref="T:CsUtility.Generic.ReadSafeDictionary`2"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="comparer">
            キーの比較時に使用する <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> 実装。
            キーの型の既定の <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> を使用する場合は null。
            </param>
        </member>
        <member name="M:CsUtility.Generic.ReadSafeDictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            空で、
            <typeparamref name="TKey"/> の規定値をディクショナリ内の値の規定値とし、
            指定した初期量を備え、
            指定した <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> を使用する、
            <see cref="T:CsUtility.Generic.ReadSafeDictionary`2"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="comparer">
            キーの比較時に使用する <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> 実装。
            キーの型の既定の <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> を使用する場合は null。
            </param>
            <param name="capacity">  が格納できる要素数の初期値。</param>
            <exception cref="T:System.ArgumentOutOfRangeException"> <paramref name="capacity"/> が 0 未満です。</exception>
        </member>
        <member name="M:CsUtility.Generic.ReadSafeDictionary`2.#ctor(`1)">
            <summary>
            空で、
            指定した値をディクショナリ内の値の規定値とし、
            規定の初期量を備え、
            キーの型の既定の等値比較子を使用する、
            <see cref="T:CsUtility.Generic.ReadSafeDictionary`2"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="defaultValue"> ディクショナリ内の値の規定値。 </param>
        </member>
        <member name="M:CsUtility.Generic.ReadSafeDictionary`2.#ctor(`1,System.Int32)">
            <summary>
            空で、
            指定した値をディクショナリ内の値の規定値とし、
            指定した初期量を備え、
            キーの型の既定の等値比較子を使用する、
            <see cref="T:CsUtility.Generic.ReadSafeDictionary`2"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="defaultValue"> ディクショナリ内の値の規定値。 </param>
            <param name="capacity">  が格納できる要素数の初期値。</param>
            <exception cref="T:System.ArgumentOutOfRangeException"> <paramref name="capacity"/> が 0 未満です。</exception>
        </member>
        <member name="M:CsUtility.Generic.ReadSafeDictionary`2.#ctor(`1,System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            空で、
            指定した値をディクショナリ内の値の規定値とし、
            規定の初期量を備え、
            指定した <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> を使用し、
            <see cref="T:CsUtility.Generic.ReadSafeDictionary`2"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="defaultValue"> ディクショナリ内の値の規定値。 </param>
            <param name="comparer">
            キーの比較時に使用する <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> 実装。
            キーの型の既定の <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> を使用する場合は null。
            </param>
        </member>
        <member name="M:CsUtility.Generic.ReadSafeDictionary`2.#ctor(`1,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            空で、
            指定した値をディクショナリ内の値の規定値とし、
            指定した初期量を備え、
            指定した <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> を使用する、
            <see cref="T:CsUtility.Generic.ReadSafeDictionary`2"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="defaultValue"> ディクショナリ内の値の規定値。 </param>
            <param name="comparer">
            キーの比較時に使用する <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> 実装。
            キーの型の既定の <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> を使用する場合は null。
            </param>
            <param name="capacity">  が格納できる要素数の初期値。</param>
            <exception cref="T:System.ArgumentOutOfRangeException"> <paramref name="capacity"/> が 0 未満です。</exception>
        </member>
        <member name="M:CsUtility.Generic.ReadSafeDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
            <summary>
            指定した <see cref="T:System.Collections.Generic.IDictionary`2"/> から要素をコピーして格納し、
            <typeparamref name="TKey"/> の規定値をディクショナリ内の値の規定値とし、
            キーの型の既定の等値比較子を使用する、
            <see cref="T:CsUtility.Generic.ReadSafeDictionary`2"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="dictionary"> 要素が新しい <see cref="T:CsUtility.Generic.ReadSafeDictionary`2"/> にコピーされる  <see cref="T:System.Collections.Generic.IDictionary`2"/>。</param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="dictionary"/> は null です。</exception>
        </member>
        <member name="M:CsUtility.Generic.ReadSafeDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            指定した <see cref="T:System.Collections.Generic.IDictionary`2"/> から要素をコピーして格納し、
            <typeparamref name="TKey"/> の規定値をディクショナリ内の値の規定値とし、
            指定した <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> を使用する、
            <see cref="T:CsUtility.Generic.ReadSafeDictionary`2"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="dictionary"> 要素が新しい <see cref="T:CsUtility.Generic.ReadSafeDictionary`2"/> にコピーされる  <see cref="T:System.Collections.Generic.IDictionary`2"/>。</param>
            <param name="comparer">
            キーの比較時に使用する <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> 実装。
            キーの型の既定の <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> を使用する場合は null。
            </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="dictionary"/> は null です。</exception>
            <exception cref="T:System.ArgumentException"> <paramref name="dictionary"/> には 1 つまたは複数の重複するキーが含まれます。</exception>
        </member>
        <member name="M:CsUtility.Generic.ReadSafeDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},`1)">
            <summary>
            指定した <see cref="T:System.Collections.Generic.IDictionary`2"/> から要素をコピーして格納し、
            指定した値をディクショナリ内の値の規定値とし、
            キーの型の既定の等値比較子を使用する、
            <see cref="T:CsUtility.Generic.ReadSafeDictionary`2"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="dictionary"> 要素が新しい <see cref="T:CsUtility.Generic.ReadSafeDictionary`2"/> にコピーされる  <see cref="T:System.Collections.Generic.IDictionary`2"/>。</param>
            <param name="defaultValue"> ディクショナリ内の値の規定値。 </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="dictionary"/> は null です。</exception>
            <exception cref="T:System.ArgumentException"> <paramref name="dictionary"/> には 1 つまたは複数の重複するキーが含まれます。</exception>
        </member>
        <member name="M:CsUtility.Generic.ReadSafeDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},`1,System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            指定した <see cref="T:System.Collections.Generic.IDictionary`2"/> から要素をコピーして格納し、
            指定した値をディクショナリ内の値の規定値とし、
            指定した <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> を使用する、
            <see cref="T:CsUtility.Generic.ReadSafeDictionary`2"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="dictionary"> 要素が新しい <see cref="T:CsUtility.Generic.ReadSafeDictionary`2"/> にコピーされる  <see cref="T:System.Collections.Generic.IDictionary`2"/>。</param>
            <param name="defaultValue"> ディクショナリ内の値の規定値。 </param>
            <param name="comparer">
            キーの比較時に使用する <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> 実装。
            キーの型の既定の <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> を使用する場合は null。
            </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="dictionary"/> は null です。</exception>
            <exception cref="T:System.ArgumentException"> <paramref name="dictionary"/> には 1 つまたは複数の重複するキーが含まれます。</exception>
        </member>
        <member name="M:CsUtility.Generic.ReadSafeDictionary`2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            シリアル化したデータを使用して、<see cref="T:CsUtility.Generic.ReadSafeDictionary`2"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="info">
            <see cref="T:CsUtility.Generic.ReadSafeDictionary`2"/> をシリアル化するために必要な情報を格納している 
            <see cref="T:System.Runtime.Serialization.SerializationInfo"/> オブジェクト。
            </param>
            <param name="context">
            <see cref="T:CsUtility.Generic.ReadSafeDictionary`2"/> に関連付けられているシリアル化ストリームの送信元および送信先を格納している
            <see cref="T:System.Runtime.Serialization.StreamingContext"/> 構造体。
            </param>
        </member>
        <member name="P:CsUtility.Generic.ReadSafeDictionary`2.Item(`0)">
            <summary>
            指定されたキーに関連付けられている値を取得または設定します。
            </summary>
            <param name="key">取得または設定する値のキー。</param>
            <returns>
            指定されたキーに関連付けられている値。 
            指定したキーが見つからなかった場合、
            get は予め指定した初期値をもつ要素を作成しそれを返します。
            set 操作は指定したキーを持つ新しい要素を作成します。
            </returns>
            <exception cref="T:System.ArgumentNullException"> key は null です。</exception>
        </member>
        <member name="M:CsUtility.Generic.ReadSafeDictionary`2.GetValueOrDefault(`0,`1,System.Boolean)">
            <summary>
            指定されたキーに関連付けられている値を取得します。存在しない場合は指定した初期値を返します。
            </summary>
            <param name="key">取得または値のキー。</param>
            <param name="defaultValue"> 指定したキーが見つからなかった場合に返す値。 </param>
            <param name="isSet"> 指定したキーが見つからなかった場合に値をセットするかを指定します。 </param>
            <returns>
            指定されたキーに関連付けられている値。 
            指定したキーが見つからなかった場合初期値を返します
            </returns>
            <exception cref="T:System.ArgumentNullException"> key は null です。</exception>
        </member>
        <member name="M:CsUtility.Generic.ReadSafeDictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            <see cref="T:System.Runtime.Serialization.ISerializable"/> インターフェイスを実装し、
            <see cref="T:CsUtility.Generic.ReadSafeDictionary`2"/> インスタンスをシリアル化するために必要なデータを返します。
            </summary>
            <param name="info">
            <see cref="T:CsUtility.Generic.ReadSafeDictionary`2"/> をシリアル化するために必要な情報を格納している 
            <see cref="T:System.Runtime.Serialization.SerializationInfo"/> オブジェクト。
            </param>
            <param name="context">
            <see cref="T:CsUtility.Generic.ReadSafeDictionary`2"/> に関連付けられているシリアル化ストリームの送信元および送信先を格納している
            <see cref="T:System.Runtime.Serialization.StreamingContext"/> 構造体。
            </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="info"/> は null です。</exception>
        </member>
        <member name="T:CsUtility.Primitive.PrimitiveUtilities">
            <summary>
            組み込み型の static メソッドの利用を助ける拡張メソッドを提供するクラス。
            </summary>
        </member>
        <member name="M:CsUtility.Primitive.PrimitiveUtilities.IsNullOrEmpty(System.String)">
            <summary>
            指定された文字列が null または System.String.Empty 文字列であるかどうかを示します。
            </summary>
            <param name="value"> テストする文字列。</param>
            <returns> value パラメーターが null または空の文字列 ("") の場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:CsUtility.Primitive.PrimitiveUtilities.IsNullOrWhiteSpace(System.String)">
            <summary>
            指定された文字列が null または空であるか、空白文字だけで構成されているかどうかを示します。
            </summary>
            <param name="value"> テストする文字列。</param>
            <returns>
            value パラメーターが null または System.String.Empty であるか、value が空白文字だけで構成されている場合は。 true
            </returns>
        </member>
        <member name="M:CsUtility.Primitive.PrimitiveUtilities.Not(System.Boolean)">
            <summary> 真理値の否定を返します。 </summary>
            <param name="value"> 否定する真理値 </param>
            <returns> 否定された真理値 </returns>
        </member>
        <member name="M:CsUtility.Primitive.PrimitiveUtilities.IsNaN(System.Single)">
            <summary>
            指定した値が非数値 (<see cref="F:System.Single.NaN"/>) かどうかを示す値を返します。
            </summary>
            <param name="val"> 評価する値。 </param>
            <returns>
            <paramref name="val"/> が非数 (<see cref="F:System.Single.NaN"/>) と評価される場合は true。それ以外の場合は false。
            </returns>
        </member>
        <member name="M:CsUtility.Primitive.PrimitiveUtilities.IsInfinity(System.Single)">
            <summary>
            指定した値が負または正の無限大と評価されるかどうかを示す値を返します。
            </summary>
            <param name="val"> 評価する値。 </param>
            <returns>
            <paramref name="val"/> が <see cref="F:System.Single.PositiveInfinity"/> または <see cref="F:System.Single.NegativeInfinity"/> と評価される場合は true。それ以外の場合は false。
            </returns>
        </member>
        <member name="M:CsUtility.Primitive.PrimitiveUtilities.IsPositiveInfinity(System.Single)">
            <summary>
            指定した値が正の無限大と評価されるかどうかを示す値を返します。
            </summary>
            <param name="val"> 評価する値。 </param>
            <returns>
            <paramref name="val"/> が <see cref="F:System.Single.PositiveInfinity"/> と評価される場合は true。それ以外の場合は false。
            </returns>
        </member>
        <member name="M:CsUtility.Primitive.PrimitiveUtilities.IsNegativeInfinity(System.Single)">
            <summary>
            指定した値が負の無限大と評価されるかどうかを示す値を返します。
            </summary>
            <param name="val"> 評価する値。 </param>
            <returns>
            <paramref name="val"/> が <see cref="F:System.Single.NegativeInfinity"/> と評価される場合は true。それ以外の場合は false。
            </returns>
        </member>
        <member name="M:CsUtility.Primitive.PrimitiveUtilities.IsNaN(System.Double)">
            <summary>
            指定した値が非数値 (<see cref="F:System.Double.NaN"/>) かどうかを示す値を返します。
            </summary>
            <param name="val"> 評価する値。 </param>
            <returns>
            <paramref name="val"/> が非数 (<see cref="F:System.Double.NaN"/>) と評価される場合は true。それ以外の場合は false。
            </returns>
        </member>
        <member name="M:CsUtility.Primitive.PrimitiveUtilities.IsInfinity(System.Double)">
            <summary>
            指定した値が負または正の無限大と評価されるかどうかを示す値を返します。
            </summary>
            <param name="val"> 評価する値。 </param>
            <returns>
            <paramref name="val"/> が <see cref="F:System.Double.PositiveInfinity"/> または <see cref="F:System.Double.NegativeInfinity"/> と評価される場合は true。それ以外の場合は false。
            </returns>
        </member>
        <member name="M:CsUtility.Primitive.PrimitiveUtilities.IsPositiveInfinity(System.Double)">
            <summary>
            指定した値が正の無限大と評価されるかどうかを示す値を返します。
            </summary>
            <param name="val"> 評価する値。 </param>
            <returns>
            <paramref name="val"/> が <see cref="F:System.Double.PositiveInfinity"/> と評価される場合は true。それ以外の場合は false。
            </returns>
        </member>
        <member name="M:CsUtility.Primitive.PrimitiveUtilities.IsNegativeInfinity(System.Double)">
            <summary>
            指定した値が負の無限大と評価されるかどうかを示す値を返します。
            </summary>
            <param name="val"> 評価する値。 </param>
            <returns>
            <paramref name="val"/> が <see cref="F:System.Double.NegativeInfinity"/> と評価される場合は true。それ以外の場合は false。
            </returns>
        </member>
    </members>
</doc>
